<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="jp.co.lyc.cms.mapper.SalesSituationMapper">
    <resultMap id="SalesSituation" type="jp.co.lyc.cms.model.SalesSituationModel"/>
    <!-- 初期表示 -->
    <select id="getSalesSituationModel" parameterType="String" resultType="jp.co.lyc.cms.model.SalesSituationModel">
SELECT 
(@rowNo:=@rowNo + 1) AS rowNo,
    temp.*
FROM
    ((SELECT 
    T001.employeeNo,
    T002.resumeInfo1,
    T002.resumeInfo2,
    CONCAT(T001.employeeFristName,
            T001.employeeLastName) AS 'employeeName',
    M013.stationName AS 'nearestStation',
    CONCAT_WS(',',
            T002.developLanguage1,
            T002.developLanguage2,
            T002.developLanguage3,
            T002.developLanguage4,
            T002.developLanguage5) AS 'developLanguage',
    '' AS customer,
    '' as nowCustomer,
    M012.siteRoleName AS siteRoleCode,
    '' AS 'unitPrice',
    '' AS 'admissionEndDate',
    '' AS 'admissionStartDate',
    IF(ISNULL(T010.salesProgressCode),
        '',
        T010.salesProgressCode) AS 'salesProgressCode',
    T010.salesYearAndMonth,
    T010.interviewDate1,
    T010.stationCode1,
    T010.interviewCustomer1,
    T010.interviewDate2,
    T010.stationCode2,
    T010.interviewCustomer2,
    T010.hopeLowestPrice,
    T010.hopeHighestPrice,
   
    T010.remark,
    IF(ISNULL(T010.salesStaff),
        '',
        T010.salesStaff) AS 'salesStaff',
    T010.salesPriorityStatus
FROM
    T001Employee T001
        LEFT JOIN
    T003AddressInfo T003 ON T001.employeeNo = T003.employeeNo
        LEFT JOIN
    M013Station M013 ON M013.stationCode = T003.stationCode1
        LEFT JOIN
    T002EmployeeDetail T002 ON T001.employeeNo = T002.employeeNo
        LEFT JOIN
    T006EmployeeSiteInfo T006 ON T001.employeeNo = T006.employeeNo
        LEFT JOIN
    M012SiteRole M012 ON T002.siteRoleCode = M012.siteRoleCode
        LEFT JOIN
    T010SalesSituation T010 ON T001.employeeNo = T010.employeeNo
WHERE
    T002.intoCompanyYearAndMonth = #{sysDate}
        AND T002.intoCompanyCode = 1
        AND T002.employeeNo NOT IN ((SELECT 
            employeeNo
        FROM
            T006EmployeeSiteInfo) union  (SELECT 
            employeeNo
        FROM
            T010SalesSituation where salesProgressCode IN (3 , 5)))  
ORDER BY T001.employeeNo) UNION ALL (SELECT 
    T001.employeeNo,
    T002.resumeInfo1,
    T002.resumeInfo2,
    CONCAT(T001.employeeFristName,
            T001.employeeLastName) AS 'employeeName',
    M013.stationName AS 'nearestStation',
    CONCAT_WS(',',
            T002.developLanguage1,
            T002.developLanguage2,
            T002.developLanguage3,
            T002.developLanguage4,
            T002.developLanguage5) AS 'developLanguage',
    '' AS customer,
    T006.customerNo as nowCustomer,
    M012.siteRoleName AS siteRoleCode,
    T006.unitPrice,
    T006.admissionEndDate,
    IF(ISNULL(T006.admissionStartDate),
        '',
        T006.admissionStartDate) AS 'admissionStartDate',
    IF(ISNULL(T010.salesProgressCode),
        '',
        T010.salesProgressCode) AS 'salesProgressCode',
    T010.salesYearAndMonth,
    T010.interviewDate1,
    T010.stationCode1,
    T010.interviewCustomer1,
    T010.interviewDate2,
    T010.stationCode2,
    T010.interviewCustomer2,
    T010.hopeLowestPrice,
    T010.hopeHighestPrice,
  
    T010.remark,
    IF(ISNULL(T010.salesStaff),
        '',
        T010.salesStaff) AS 'salesStaff',
    T010.salesPriorityStatus
FROM
    T001Employee T001
        LEFT JOIN
    T003AddressInfo T003 ON T001.employeeNo = T003.employeeNo
        LEFT JOIN
    M013Station M013 ON M013.stationCode = T003.stationCode1
        LEFT JOIN
    T002EmployeeDetail T002 ON T001.employeeNo = T002.employeeNo
        LEFT JOIN
    T006EmployeeSiteInfo T006 ON T001.employeeNo = T006.employeeNo
        LEFT JOIN
    M012SiteRole M012 ON T002.siteRoleCode = M012.siteRoleCode
        LEFT JOIN
    T010SalesSituation T010 ON T001.employeeNo = T010.employeeNo
WHERE
    LEFT(T006.admissionEndDate, 6) = #{sysDate}
ORDER BY T001.employeeNo) UNION ALL (SELECT 
    T011.bpEmployeeNo AS employeeNo,
    T002.resumeInfo1,
    T002.resumeInfo2,
    CONCAT(T001.employeeFristName,
            T001.employeeLastName) AS 'employeeName',
    M013.stationName AS 'nearestStation',
    CONCAT_WS(',',
            T002.developLanguage1,
            T002.developLanguage2,
            T002.developLanguage3,
            T002.developLanguage4,
            T002.developLanguage5) AS 'developLanguage',
    '' AS customer,
    '' as nowCustomer,
    M012.siteRoleName AS siteRoleCode,
    '' AS 'unitPrice',
    '' AS 'admissionEndDate',
    '' AS 'admissionStartDate',
    IF(ISNULL(T010.salesProgressCode),
        '',
        T010.salesProgressCode) AS 'salesProgressCode',
    T010.salesYearAndMonth,
    T010.interviewDate1,
    T010.stationCode1,
    T010.interviewCustomer1,
    T010.interviewDate2,
    T010.stationCode2,
    T010.interviewCustomer2,
    T010.hopeLowestPrice,
    T010.hopeHighestPrice,

    T010.remark,
    IF(ISNULL(T010.salesStaff),
        '',
        T010.salesStaff) AS 'salesStaff',
    T010.salesPriorityStatus
FROM
    T011BpInfoSupplement T011
        LEFT JOIN
    T001Employee T001 ON T001.employeeNo = T011.bpEmployeeNo
        LEFT JOIN
    T003AddressInfo T003 ON T011.bpEmployeeNo = T003.employeeNo
        LEFT JOIN
    M013Station M013 ON M013.stationCode = T003.stationCode1
        LEFT JOIN
    T002EmployeeDetail T002 ON T011.bpEmployeeNo = T002.employeeNo
        LEFT JOIN
    M012SiteRole M012 ON T002.siteRoleCode = M012.siteRoleCode
        LEFT JOIN
    T010SalesSituation T010 ON T011.bpEmployeeNo = T010.employeeNo
WHERE
    T011.bpSalesProgressCode IN (1 , 2) and T011.bpOtherCompanyAdmissionEndDate = #{sysDate}
    and T011.bpEmployeeNo  not in(SELECT 
            employeeNo
        FROM
            rams.T006EmployeeSiteInfo)
ORDER BY T011.bpEmployeeNo)union all(
SELECT 
    T010.employeeNo AS employeeNo,
    T002.resumeInfo1,
    T002.resumeInfo2,
    CONCAT(T001.employeeFristName,
            T001.employeeLastName) AS 'employeeName',
    M013.stationName AS 'nearestStation',
    CONCAT_WS(',',
            T002.developLanguage1,
            T002.developLanguage2,
            T002.developLanguage3,
            T002.developLanguage4,
            T002.developLanguage5) AS 'developLanguage',
    T006.customerNo AS customer,
    T006.customerNo as nowCustomer,
    M012.siteRoleName AS siteRoleCode,
       T006.unitPrice,
    '' AS 'admissionEndDate',
    T006.admissionStartDate,
    IF(ISNULL(T010.salesProgressCode),
        '',
        T010.salesProgressCode) AS 'salesProgressCode',
    T010.salesYearAndMonth,
    T010.interviewDate1,
    T010.stationCode1,
    T010.interviewCustomer1,
    T010.interviewDate2,
    T010.stationCode2,
    T010.interviewCustomer2,
    T010.hopeLowestPrice,
    T010.hopeHighestPrice,
   
    T010.remark,
    IF(ISNULL(T010.salesStaff),
        '',
        T010.salesStaff) AS 'salesStaff',
    T010.salesPriorityStatus
FROM
    T010SalesSituation T010
        LEFT JOIN
    T001Employee T001 ON T001.employeeNo = T010.employeeNo
        LEFT JOIN
    T003AddressInfo T003 ON T010.employeeNo = T003.employeeNo
        LEFT JOIN
    M013Station M013 ON M013.stationCode = T003.stationCode1
        LEFT JOIN
    T002EmployeeDetail T002 ON T010.employeeNo = T002.employeeNo
        LEFT JOIN
    T006EmployeeSiteInfo T006 ON T010.employeeNo = T006.employeeNo
        LEFT JOIN
    M012SiteRole M012 ON T002.siteRoleCode = M012.siteRoleCode
WHERE
    T010.salesProgressCode IN (3 , 5) and  T010.salesYearAndMonth = #{sysDate}
ORDER BY T010.employeeNo)) temp,(select @rowno:=0) as rowNo 
ORDER BY employeeNo	

    </select>
    
    <!--営業状況更新 -->
	<insert id="insertSalesSituation" parameterType="String">
		INSERT INTO T010SalesSituation
		(employeeNo,
		salesYearAndMonth,
		interviewDate1,
		stationCode1,
		interviewCustomer1,
		interviewDate2,
		stationCode2,
		interviewCustomer2,
		hopeLowestPrice,
		hopeHighestPrice,
		salesPriorityStatus,
		salesProgressCode,
		remark,
		salesStaff,
		updateTime,
		createTime,
		updateUser)
		VALUES
		(
		#{employeeNo},
		#{salesYearAndMonth},
		#{interviewDate1},
		#{stationCode1},
		#{interviewCustomer1},
		#{interviewDate2},
		#{stationCode2},
		#{interviewCustomer2},
		#{hopeLowestPrice},
		#{hopeHighestPrice},
		#{salesPriorityStatus},
		#{salesProgressCode},
		#{remark},
		#{salesStaff},
		 NOW(),
		 NOW(),
		#{updateUser})
		ON DUPLICATE KEY UPDATE 
			interviewDate1=#{interviewDate1},
			stationCode1=#{stationCode1},
			interviewCustomer1=#{interviewCustomer1},
			interviewDate2=#{interviewDate2},
			stationCode2=#{stationCode2},
			interviewCustomer2=#{interviewCustomer2},
			hopeLowestPrice=#{hopeLowestPrice},
			hopeHighestPrice=#{hopeHighestPrice},
			salesPriorityStatus=#{salesPriorityStatus},
			salesProgressCode=#{salesProgressCode},
			remark=#{remark},
			salesStaff=#{salesStaff},
			updateTime= NOW(),
			createTime= NOW(),
			updateUser=#{updateUser}

	</insert>
	<!-- 現場現　を更新 -->
	<insert id="updateEmployeeSiteInfo" parameterType="String">
		INSERT INTO T006EmployeeSiteInfo
		(employeeNo,
		admissionStartDate,
		customerNo,
		unitPrice,
		updateTime,
        createTime,
		updateUser)
		VALUES
		(
		#{employeeNo},
		#{admissionStartDate},
		#{customerNo},
		#{unitPrice},
		 NOW(),
         NOW(),
		#{updateUser})
		ON DUPLICATE KEY UPDATE 
			admissionStartDate=#{admissionStartDate},
			customerNo=#{customerNo},
			unitPrice=#{unitPrice},
			admissionEndDate=null,
			updateTime= NOW(),
			updateUser=#{updateUser}

	</insert>
	<insert id="updateSalesSituation" parameterType="String">
		INSERT INTO T010SalesSituation
		(employeeNo,
		salesYearAndMonth,
		salesProgressCode,
		salesStaff,
		updateTime,
		createTime,
		updateUser)
		VALUES
		(
		#{employeeNo},
		#{salesYearAndMonth},
		#{salesProgressCode},
		#{salesStaff},
		 NOW(),
		 NOW(),
		#{updateUser})
		ON DUPLICATE KEY UPDATE
			salesProgressCode=#{salesProgressCode},
			salesStaff=#{salesStaff},
			updateTime= NOW(),
			createTime= NOW(),
			updateUser=#{updateUser}

	</insert>
</mapper>