<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="jp.co.lyc.cms.mapper.EmployeeInfoMapper">
	<resultMap id="Employee"
		type="jp.co.lyc.cms.model.EmployeeModel" />
	<resultMap id="stringResult" type="String" />
	<select id="getEmployeeInfo" parameterType="map"
		resultMap="Employee">
		SELECT
		(@rowNo:=@rowNo + 1) AS rowNo,
		T001.employeeNo,
		CONCAT(T001.employeeFristName,' ',T001.employeeLastName) as
		employeeFristName ,
		T002.Furigana,
		T002.alphabetName,
		T002.birthday,
		T002.intoCompanyYearAndMonth,
		T006.AdmissionStartDate,
		T005.salary,
		T007.customerName,
		T002.phoneNo,
		T003.postcode,
		T003.firstHalfAddress,
		T003.lastHalfAddress,
		M013.stationName,
		T002.stayPeriod,
		T002.residentCardInfo,
		T002.passportInfo,
		T015.resumeInfo1,
		T015.resumeName1,
		T015.resumeInfo2,
		T015.resumeName2
		FROM
		T001Employee AS
		T001
		LEFT JOIN
		T002EmployeeDetail AS T002 ON T002.employeeNo
		=T001.employeeNo
		LEFT
		JOIN T015ResumeManagement AS T015 ON
		T015.employeeNo=T001.employeeNo
		LEFT JOIN T006EmployeeSiteInfo AS T006
		ON T001.employeeNo =
		T006.employeeNo
		AND admissionStartDate in
		(
		<if test="kadou!=null">
			<if test='kadou=="0"'>
				SELECT MAX(admissionStartDate) FROM T006EmployeeSiteInfo
				where 1=1 GROUP BY employeeNo
			</if>
			<if test='kadou=="1"'>
				SELECT MAX(admissionEndDate) FROM T006EmployeeSiteInfo
				where 1=1 GROUP BY employeeNo
			</if>
		</if>
		<if test="kadou==null">
			SELECT MAX(admissionStartDate) FROM T006EmployeeSiteInfo
			where 1=1
		</if>
		)
		LEFT JOIN T003AddressInfo AS T003 ON T001.employeeNo=T003.employeeNo
		LEFT JOIN M013Station AS M013 ON T003.stationCode=M013.stationCode
		LEFT JOIN T005WagesInfo AS T005 ON T001.employeeNo=T005.employeeNo
		and
		reflectYearAndMonth = (SELECT MAX(reflectYearAndMonth) FROM
		T005WagesInfo)
		LEFT JOIN T007CustomerInfo AS T007 ON T006.customerNo
		=T007.customerNo,
		(SELECT @rowNo:=0) AS rowNo WHERE 1 = 1
		<if test="employeeNo!=null">
			AND T001.employeeNo=#{employeeNo}
		</if>
		<if test="employeeName!=null">
			AND CONCAT(T001.employeeFristName,T001.employeeLastName)
			like
			concat('%',#{employeeName},'%')
		</if>
		<if test="employeeFormCode!=null">
			AND T002.employeeFormCode=#{employeeFormCode}
		</if>
		<if test="employeeFormCode==null">
			AND T002.employeeFormCode !='3'
		</if>
		<if test="employeeStatus!=null">
			AND T002.employeeStatus=#{employeeStatus}
		</if>
		<if test="genderStatus!=null">
			AND T002.genderStatus=#{genderStatus}
		</if>
		<if test="ageFrom != null">
			AND T002.birthday &lt;= #{ageFrom}+9999
		</if>
		<if test="ageTo != null">
			AND T002.birthday &gt;= #{ageTo}
		</if>
		<if test="residenceCode != null">
			AND T002.residenceCode=#{residenceCode}
		</if>
		<if test="nationalityCode != null">
			AND T002.nationalityCode=#{nationalityCode}
		</if>
		<if test="siteRoleCode != null">
			AND T002.siteRoleCode=#{siteRoleCode}
		</if>

		<if test="customer!= null">
			AND T007.customerNo=#{customer}
		</if>
		<if test="intoCompanyCode!= null">
			AND T002.intoCompanyCode=#{intoCompanyCode}
		</if>
		<if test="japaneseLevelCode!=  null">
			AND T002.japaneseLevelCode=#{japaneseLevelCode}
		</if>
		<if test="developLanguage1 != null">
			AND (T002.developLanguage1=#{developLanguage1}
			or
			T002.developLanguage2=#{developLanguage1}
			or
			T002.developLanguage3=#{developLanguage1}
			or
			T002.developLanguage4=#{developLanguage1}
			or
			T002.developLanguage5=#{developLanguage1}
			)
		</if>
		<if test="developLanguage2 != null">
			AND (T002.developLanguage1=#{developLanguage2}
			or
			T002.developLanguage2=#{developLanguage2}
			or
			T002.developLanguage3=#{developLanguage2}
			or
			T002.developLanguage4=#{developLanguage2}
			or
			T002.developLanguage5=#{developLanguage2}
			)
		</if>
		<if test="developLanguage3!= null">
			AND T002.developLanguage3=#{developLanguage3}
		</if>
		<if test="intoCompanyYearAndMonthFrom != null">
			AND T002.intoCompanyYearAndMonth
			&gt;=#{intoCompanyYearAndMonthFrom}
		</if>
		<if test="intoCompanyYearAndMonthTo!= null">
			AND T002.intoCompanyYearAndMonth
			&lt;=#{intoCompanyYearAndMonthTo}
		</if>
		<if test="kadou!=null">
			<if test='kadou=="0"'>
				AND ( AdmissionStartDate is not null
				AND AdmissionEndDate
				is null
				AND AdmissionStartDate
				&lt;date_format(now(),'%Y%m%d'))
				or
				(AdmissionEndDate
				&lt;date_format(now(),'%Y%m%d'))
			</if>
			<if test='kadou=="1"'>
				AND
				AdmissionEndDate is not null and (AdmissionEndDate
				&lt;date_format(now(),'%Y%m%d'))
			</if>
		</if>
		ORDER BY
		rowNo
		ASC

	</select>

	<select id="getEmployeesInfo" parameterType="map"
		resultMap="Employee">
		SELECT
		T001.employeeNo,
		T001.employeeFristName,
		T001.employeeLastName,
		T002.employeeStatus,
		T002.furigana,
		T002.alphabetName,
		T002.birthday,
		T002.intoCompanyYearAndMonth,
		T002.phoneNo,
		T002.stayPeriod,
		T002.residentCardInfo,
		T002.passportInfo,
		T002.genderStatus,
		T002.intoCompanyCode,
		T002.employeeFormCode,
		T002.nationalityCode,
		T002.siteRoleCode,
		T002.developLanguage1,
		T002.developLanguage2,
		T002.residenceCode,
		T002.japaneseLevelCode,
		T003.postcode,
		T003.firstHalfAddress,
		T003.lastHalfAddress,
		T005.salary,
		MAX(T006.AdmissionStartDate) as admissionStartDate,
		MAX(T006.AdmissionEndDate) as admissionEndDate,
		T007.customerName,
		T015.resumeInfo1,
		T015.resumeName1,
		T015.resumeInfo2,
		T015.resumeName2,
		M013.stationName
		FROM T002EmployeeDetail as
		T002
		LEFT
		JOIN T001Employee as
		T001
		ON T002.employeeNo =
		T001.employeeNo
		LEFT JOIN
		T003AddressInfo AS
		T003 ON
		T002.employeeNo=T003.employeeNo
		LEFT JOIN
		M013Station AS M013
		ON
		T003.stationCode=M013.stationCode
		LEFT JOIN
		T005WagesInfo AS
		T005 ON
		T002.employeeNo=T005.employeeNo
		and
		reflectYearAndMonth = (SELECT
		MAX(reflectYearAndMonth) FROM
		T005WagesInfo)
		LEFT JOIN
		T006EmployeeSiteInfo AS T006
		ON T001.employeeNo
		=
		T006.employeeNo
		LEFT
		JOIN T007CustomerInfo AS T007 ON
		T006.customerNo
		=T007.customerNo
		LEFT
		JOIN T015ResumeManagement
		AS T015 ON
		T015.employeeNo=T002.employeeNo
		WHERE
		<if test="kadou!=null">
			<if test='kadou=="0"'>
				T006.admissionStartDate != "" and T006.admissionStartDate
				is not
				null
				and T006.admissionEndDate is null
				and
				if(T006.typteOfContractCode is null,1=1,T006.typteOfContractCode !=
				"4")
				or T006.admissionStartDate != "" and
				T006.admissionStartDate is
				not null
				and T006.admissionEndDate &gt; #{nowDate}
				and
				if(T006.typteOfContractCode is null,1=1,T006.typteOfContractCode !=
				"4")
			</if>
			<if test='kadou=="1"'>
			1=1
			</if>
		</if>
		<if test="kadou==null">
			1=1
		</if>
		<if test="authorityCode != 4">
			and T001.authorityCode != 4
		</if>
		and CONCAT(T001.employeeFristName,T001.employeeLastName) =
		ifnull(#{employeeName},CONCAT(T001.employeeFristName,T001.employeeLastName))

		and
		intoCompanyYearAndMonth between
		ifnull(#{intoCompanyYearAndMonthFrom},intoCompanyYearAndMonth) and
		ifnull(#{intoCompanyYearAndMonthTo},intoCompanyYearAndMonth)
		and
		birthday between ifnull(#{ageTo},birthday) and
		ifnull(#{ageFrom},birthday)
		and
		genderStatus =
		ifnull(#{genderStatus},genderStatus)
		and
		intoCompanyCode =
		ifnull(#{intoCompanyCode},intoCompanyCode)
		and
		<if test="employeeName == null ">
			if(#{employeeFormCode} is
			null,T002.employeeFormCode !=
			"4",T002.employeeFormCode =
			#{employeeFormCode})
		</if>
		<if test="employeeName != null ">
			T002.employeeFormCode =
			ifnull(#{employeeFormCode},T002.employeeFormCode)
		</if>
		and
		nationalityCode =
		ifnull(#{nationalityCode},nationalityCode)
		and
		T002.siteRoleCode =
		ifnull(#{siteRoleCode},T002.siteRoleCode)
		and
		residenceCode =
		ifnull(#{residenceCode},residenceCode)
		and
		japaneseLevelCode =
		ifnull(#{japaneseLevelCode},japaneseLevelCode)
		<if test="employeeStatus != 5 ">
			and
			T002.employeeStatus =
			ifnull(#{employeeStatus},T002.employeeStatus)
		</if>
		<if test="employeeStatus == 5 ">
			and
			T002.employeeStatus not in ("1","4")
		</if>
		<if test="socialInsuranceStatus != null">
			and
			socialInsuranceStatus =
			ifnull(#{socialInsuranceStatus},socialInsuranceStatus)
			<if test="socialInsuranceDate != null">
				and
				socialInsuranceDate &lt;=
				ifnull(#{socialInsuranceDate},socialInsuranceDate)
			</if>
		</if>
		GROUP BY
		employeeNo
		order
		by
		employeeNo;
	</select>

	<!-- 社員情報を確認 -->
	<select id="getEmployeesCSV"
		resultType="jp.co.lyc.cms.model.EmployeeInfoCsvModel">
		SELECT T002.employeeNo,T002.alphabetName,if(T002.contractDeadline is
		null or T002.contractDeadline =
		"","",concat(LEFT(T002.contractDeadline,4),"/",LEFT(RIGHT(T002.contractDeadline,4),2),"/",RIGHT(T002.contractDeadline,2)))
		AS contractDeadline,
		T002.companyMail,T002.japaneseCalendar,if(T002.birthday =
		"","",concat(LEFT(T002.birthday,4),"/",LEFT(RIGHT(T002.birthday,4),2),"/",RIGHT(T002.birthday,2)))
		AS birthday,
		if(T002.immigrationEndTime is null or
		T002.immigrationEndTime =
		"","",concat(LEFT(T002.immigrationEndTime,4),"/",RIGHT(T002.immigrationEndTime,2)))
		AS immigrationEndTime,
		if(T002.immigrationStartTime is null or
		T002.immigrationStartTime =
		"","",concat(LEFT(T002.immigrationStartTime,4),"/",RIGHT(T002.immigrationStartTime,2)))
		AS immigrationStartTime,
		if(T002.intoCompanyYearAndMonth is null or
		T002.intoCompanyYearAndMonth =
		"","",concat(LEFT(T002.intoCompanyYearAndMonth,4),"/",RIGHT(T002.intoCompanyYearAndMonth,2)))
		AS intoCompanyYearAndMonth,if(T002.stayPeriod is null or
		T002.stayPeriod =
		"","",concat(LEFT(T002.stayPeriod,4),"/",LEFT(RIGHT(T002.stayPeriod,4),2),"/",RIGHT(T002.stayPeriod,2)))
		AS stayPeriod,
		if(T002.socialInsuranceDate is null or
		T002.socialInsuranceDate =
		"","",concat(LEFT(T002.socialInsuranceDate,4),"/",LEFT(RIGHT(T002.socialInsuranceDate,4),2),"/",RIGHT(T002.socialInsuranceDate,2)))
		AS socialInsuranceDate,
		if(T002.retirementYearAndMonth is null or
		T002.retirementYearAndMonth =
		"","",concat(LEFT(T002.retirementYearAndMonth,4),"/",LEFT(RIGHT(T002.retirementYearAndMonth,4),2),"/",RIGHT(T002.retirementYearAndMonth,2)))
		AS retirementYearAndMonth,
		if(T002.socialInsuranceNo is
		null,"",T002.socialInsuranceNo)
		AS
		socialInsuranceNo,
		if(T002.residenceCardNo is
		null,"",T002.residenceCardNo)
		AS
		residenceCardNo,if(T002.passportNo is
		null,"",T002.passportNo) AS
		passportNo,
		if(T002.passportStayPeriod is null or
		T002.passportStayPeriod =
		"","",concat(LEFT(T002.passportStayPeriod,4),"/",LEFT(RIGHT(T002.passportStayPeriod,4),2),"/",RIGHT(T002.passportStayPeriod,2)))
		AS passportStayPeriod,if(T002.myNumber is null,"",T002.myNumber) AS
		myNumber,
		if(if(T002.employmentInsuranceStatus is
		null,"",T002.employmentInsuranceStatus) =
		"1","あり",if(if(T002.employmentInsuranceStatus is
		null,"",T002.employmentInsuranceStatus) = "0","なし","")) AS
		employmentInsuranceStatus,
		if(T002.employmentInsuranceNo is
		null,"",T002.employmentInsuranceNo) AS employmentInsuranceNo,
		if(T002.phoneNo is null or T002.phoneNo =
		"","",concat(LEFT(T002.phoneNo,3),"-",LEFT(RIGHT(T002.phoneNo,8),4),"-",RIGHT(T002.phoneNo,4)))
		AS phoneNo,
		T002.furigana,IF(T002.genderStatus = 0,"男","女") AS
		genderStatus,
		concat(T001.employeeFristName,T001.employeeLastName) AS
		employeeName,
		T003.postcode,concat(T003.firstHalfAddress,T003.lastHalfAddress) AS
		address,
		if(concat(if(M001.bankName is
		null,"",M001.bankName),"-",if(M002.bankBranchName is
		null,"",concat(M002.bankBranchName,"(",T004.bankBranchCode,")")),"-",if(T004.accountTypeStatus
		= "0","普通","当座"),"-",T004.accountNo) is
		null,
		"",concat(if(M001.bankName is
		null,"",M001.bankName),"-",if(M002.bankBranchName is
		null,"",concat(M002.bankBranchName,"(",T004.bankBranchCode,")")),"-",if(T004.accountTypeStatus
		= "0","普通","当座"),"-",T004.accountNo)) AS
		accountInfo,
		M003.nationalityName AS nationality,
		if(M006.visaName is
		null,"",M006.visaName) AS residenceName
		FROM T002EmployeeDetail AS T002
		LEFT JOIN M003Nationality AS M003
		ON T002.nationalityCode =
		M003.nationalityCode
		LEFT JOIN T001Employee AS T001
		ON T002.employeeNo =
		T001.employeeNo
		LEFT JOIN M006Visa AS M006
		ON T002.residenceCode =
		M006.visaCode
		and T002.residenceCode is not null and T002.residenceCode
		!= ""
		LEFT JOIN T003AddressInfo AS T003
		ON T002.employeeNo =
		T003.employeeNo
		LEFT JOIN T004AccountInfo AS T004
		ON T002.employeeNo =
		T004.employeeOrCustomerNo
		LEFT JOIN M001Bank AS M001
		ON T004.bankCode =
		M001.bankCode
		LEFT JOIN M002BankBranch AS M002
		ON M001.bankCode =
		M002.bankCode
		and T004.bankBranchCode = M002.bankBranchCode
		Where
		T002.employeeNo in
		<foreach item="item" open="(" close=")" collection="list"
			separator=",">
			#{item}
		</foreach>
		;
	</select>

	<!-- 社員情報を確認 -->
	<select id="verificationEmployeeInfo" resultType="string">
		SELECT
		employeeNo FROM T006EmployeeSiteInfo where
		admissionEndDate is null;
	</select>

	<!-- 社員情報を追加 -->
	<insert id="insertEmployeeInfo" parameterType="String">
		INSERT INTO
		T001Employee (
		employeeNo,
		employeeFristName,
		employeeLastName,
		password,
		authorityCode,
		updateTime,
		createTime,
		updateUser
		)
		VALUES(
		#{employeeNo},
		#{employeeFristName},
		#{employeeLastName},
		MD5(#{password}),
		#{authorityCode},
		NOW(),
		NOW(),
		#{updateUser}
		)
	</insert>

	<!-- 社員情報詳細を追加 -->
	<insert id="insertEmployeeInfoDetail" parameterType="String">
		INSERT INTO
		T002EmployeeDetail (
		employeeNo,
		genderStatus,
		birthday,
		japaneseCalendar,
		alphabetName,
		furigana,
		nationalityCode,
		birthplace,
		intoCompanyCode,
		intoCompanyYearAndMonth,
		employeeStatus,
		retirementYearAndMonth,
		retirementResonClassification,
		myNumber,
		occupationCode,
		employeeFormCode,
		comeToJapanYearAndMonth,
		graduationUniversity,
		graduationYearAndMonth,
		major,
		residenceCode,
		residenceCardNo,
		stayPeriod,
		passportStayPeriod,
		passportNo,
		immigrationStartTime,
		immigrationEndTime,
		japaneseLevelCode,
		englishLevelCode,
		developLanguage1,
		developLanguage2,
		developLanguage3,
		developLanguage4,
		developLanguage5,
		frameWork1,
		frameWork2,
		certification1,
		certification2,
		residentCardInfo,
		passportInfo,
		companyMail,
		phoneNo,
		employmentInsuranceStatus,
		employmentInsuranceNo,
		socialInsuranceStatus,
		socialInsuranceNo,
		socialInsuranceDate,
		departmentCode,
		contractDeadline,
		updateTime,
		createTime,
		updateUser,
		picInfo,
		yearsOfExperience,
		siteRoleCode,
		projectTypeCode,
		DealDistinctioCode
		)
		VALUES(
		#{employeeNo},
		#{genderStatus},
		#{birthday},
		#{japaneseCalendar},
		#{alphabetName},
		#{furigana},
		#{nationalityCode},
		#{birthplace},
		#{intoCompanyCode},
		#{intoCompanyYearAndMonth},
		#{employeeStatus},
		#{retirementYearAndMonth},
		#{retirementResonClassification},
		#{myNumber},
		#{occupationCode},
		#{employeeFormCode},
		#{comeToJapanYearAndMonth},
		#{graduationUniversity},
		#{graduationYearAndMonth},
		#{major},
		#{residenceCode},
		#{residenceCardNo},
		#{stayPeriod},
		#{passportStayPeriod},
		#{passportNo},
		#{immigrationStartTime},
		#{immigrationEndTime},
		#{japaneseLevelCode},
		#{englishLevelCode},
		#{developLanguage1},
		#{developLanguage2},
		#{developLanguage3},
		#{developLanguage4},
		#{developLanguage5},
		#{frameWork1},
		#{frameWork2},
		#{certification1},
		#{certification2},
		#{residentCardInfo},
		#{passportInfo},
		#{companyMail},
		#{phoneNo},
		#{employmentInsuranceStatus},
		#{employmentInsuranceNo},
		#{socialInsuranceStatus},
		#{socialInsuranceNo},
		#{socialInsuranceDate},
		#{departmentCode},
		#{contractDeadline},
		NOW(),
		NOW(),
		#{updateUser},
		#{picInfo},
		#{yearsOfExperience},
		#{siteRoleCode},
		#{projectTypeCode},
		"0"
		)
	</insert>

	<!-- 社員情報を削除 -->
	<delete id="deleteEmployeeInfo" parameterType="String">
		DELETE
		FROM
		T001Employee
		WHERE
		employeeNo = #{employeeNo};
	</delete>
	<!-- 社員情報詳細を削除 -->
	<delete id="deleteEmployeeInfoDetail" parameterType="String">
		DELETE
		FROM
		T002EmployeeDetail
		WHERE
		employeeNo = #{employeeNo};
	</delete>

	<!-- 住所情報を削除 -->
	<delete id="deleteAddressInfo" parameterType="String">
		DELETE
		FROM
		T003AddressInfo
		WHERE
		employeeNo = #{employeeNo};
	</delete>

	<!-- 社員営業状況を削除 -->
	<delete id="deleteEmployeeSalesSituation" parameterType="String">
		DELETE
		FROM
		T010SalesSituation
		WHERE
		employeeNo = #{employeeNo};
	</delete>

	<!-- BP情報を削除 -->
	<delete id="deleteBpInfoSupplement" parameterType="String">
		DELETE
		FROM
		T011BpInfoSupplement
		WHERE
		bpEmployeeNo = #{employeeNo};
	</delete>

	<!-- -->
	<select id="getEmployeeByEmployeeNo" parameterType="map"
		resultMap="Employee">
		SELECT
		<include refid="T001" />
		<include refid="T002" />
		<include refid="T003" />
		<include refid="T015" />
		<include refid="tableJoin" />
		WHERE
		1 = 1
		AND T001.employeeNo=#{employeeNo}
	</select>
	<!-- 社員情報を修正 -->
	<update id="updateEmployeeInfo" parameterType="String">
		UPDATE
		T001Employee
		SET
		<if test="employeeNo!=  null">
			employeeNo =#{employeeNo},
		</if>
		<if test="employeeFristName!=  null">
			employeeFristName =#{employeeFristName},
		</if>
		<if test="employeeLastName!=  null">
			employeeLastName =#{employeeLastName},
		</if>
		<if test="password !=  ''">
			password=MD5(#{password}),
		</if>
		<if test="employeeFristName!= null">
			authorityCode =#{authorityCode},
		</if>
		updateTime = NOW(),
		updateUser =
		#{updateUser}
		WHERE
		employeeNo =
		#{employeeNo}
	</update>
	<!-- 社員情報詳細を修正 -->
	<update id="updateEmployeeInfoDetail" parameterType="String">
		UPDATE
		T002EmployeeDetail
		SET
		<if test="employeeNo!=  null">
			employeeNo =#{employeeNo},
		</if>
		<if test="genderStatus!=  null">
			genderStatus =#{genderStatus},
		</if>
		<if test="birthday!=  null">
			birthday =#{birthday},
		</if>
		<if test="japaneseCalendar!=  null">
			japaneseCalendar =#{japaneseCalendar},
		</if>

		<if test="alphabetName!=  null">
			alphabetName =#{alphabetName},
		</if>
		<if test="employeeFormCode!=  null">
			employeeFormCode =#{employeeFormCode},
		</if>
		<if test="furigana!=  null">
			furigana =#{furigana},
		</if>
		<if test="nationalityCode!=  null">
			nationalityCode =#{nationalityCode},
		</if>
		<if test="birthplace!=  null">
			birthplace =#{birthplace},
		</if>
		<if test="intoCompanyCode!=  null">
			intoCompanyCode =#{intoCompanyCode},
		</if>
		<if test="intoCompanyYearAndMonth!=  null">
			intoCompanyYearAndMonth =#{intoCompanyYearAndMonth},
		</if>
		<if test="employeeStatus!=  null">
			employeeStatus =#{employeeStatus},
		</if>
		<if test="retirementYearAndMonth!=  null">
			retirementYearAndMonth =#{retirementYearAndMonth},
		</if>
		<if test="retirementResonClassification!=  null">
			retirementResonClassification
			=#{retirementResonClassification},
		</if>
		<if test="myNumber!=  null">
			myNumber =#{myNumber},
		</if>
		<if test="occupationCode!=  null">
			occupationCode =#{occupationCode},
		</if>
		<if test="comeToJapanYearAndMonth!=  null">
			comeToJapanYearAndMonth =#{comeToJapanYearAndMonth},
		</if>
		<if test="graduationUniversity!=  null">
			graduationUniversity =#{graduationUniversity},
		</if>
		<if test="graduationYearAndMonth!=  null">
			graduationYearAndMonth =#{graduationYearAndMonth},
		</if>
		<if test="major!=  null">
			major =#{major},
		</if>
		<if test="residenceCode!=  null">
			residenceCode =#{residenceCode},
		</if>
		<if test="residenceCardNo!=  null">
			residenceCardNo =#{residenceCardNo},
		</if>
		<if test="stayPeriod!=  null">
			stayPeriod =#{stayPeriod},
		</if>
		<if test="passportStayPeriod!=  null">
			passportStayPeriod =#{passportStayPeriod},
		</if>
		<if test="immigrationStartTime!= null">
			immigrationStartTime =#{immigrationStartTime},
		</if>
		<if test="immigrationEndTime!=  null">
			immigrationEndTime =#{immigrationEndTime},
		</if>
		<if test="japaneseLevelCode!=  null">
			japaneseLevelCode =#{japaneseLevelCode},
		</if>
		<if test="englishLevelCode!=  null">
			englishLevelCode =#{englishLevelCode},
		</if>
		<if test="developLanguage1!=  null">
			developLanguage1 =#{developLanguage1},
		</if>
		<if test="developLanguage2!=  null">
			developLanguage2 =#{developLanguage2},
		</if>
		<if test="developLanguage3!=  null">
			developLanguage3 =#{developLanguage3},
		</if>
		<if test="developLanguage4!=  null">
			developLanguage4 =#{developLanguage4},
		</if>
		<if test="developLanguage5!=  null">
			developLanguage5 =#{developLanguage5},
		</if>
		<if test="frameWork1 != null">
			frameWork1 =#{frameWork1},
		</if>
		<if test="frameWork2 != null">
			frameWork2 =#{frameWork2},
		</if>
		<if test="japaneseCalendar!=  null">
			japaneseCalendar =#{japaneseCalendar},
		</if>
		<if test="certification1!=  null">
			certification1 =#{certification1},
		</if>
		<if test="certification2!=  null">
			certification2 =#{certification2},
		</if>
		<if test="companyMail!=  null">
			companyMail =#{companyMail},
		</if>
		<if test="phoneNo!=  null">
			phoneNo =#{phoneNo},
		</if>
		<if test="employmentInsuranceStatus!=  null">
			employmentInsuranceStatus =#{employmentInsuranceStatus},
		</if>
		<if test="employmentInsuranceNo!=  null">
			employmentInsuranceNo =#{employmentInsuranceNo},
		</if>
		<if test="socialInsuranceStatus!=  null">
			socialInsuranceStatus =#{socialInsuranceStatus},
		</if>
		<if test="socialInsuranceDate!=  null">
			socialInsuranceDate =#{socialInsuranceDate},
		</if>
		<if test="projectTypeCode !=  null">
			projectTypeCode =#{projectTypeCode},
		</if>
		<if test="socialInsuranceNo!=  null">
			socialInsuranceNo =#{socialInsuranceNo},
		</if>
		<if test="siteRoleCode!=  null">
			siteRoleCode =#{siteRoleCode},
		</if>
		<if test="residentCardInfo!= null">
			residentCardInfo=#{residentCardInfo},
		</if>
		<if test="passportInfo!= null">
			passportInfo=#{passportInfo},
		</if>
		<if test="passportNo != null">
			passportNo=#{passportNo},
		</if>
		<if test="picInfo!= null">
			picInfo=#{picInfo},
		</if>
		<if test="yearsOfExperience!= null">
			yearsOfExperience=#{yearsOfExperience},
		</if>
		<if test="departmentCode!= null">
			departmentCode=#{departmentCode},
		</if>
		<if test="picInfo!= null">
			picInfo=#{picInfo},
		</if>
		<if test="contractDeadline!= null">
			contractDeadline=#{contractDeadline},
		</if>
		updateTime=NOW(),
		updateUser=
		#{updateUser}
		WHERE
		employeeNo=
		#{employeeNo}
	</update>
	<!-- アドレスを修正 -->
	<update id="updateAddressInfo" parameterType="String">
		UPDATE
		T003AddressInfo
		SET
		postcode=#{postcode},
		firstHalfAddress=#{firstHalfAddress},
		lastHalfAddress=#{lastHalfAddress},
		stationCode=#{stationCode},
		updateTime=NOW(),
		updateUser=#{updateUser}
		WHERE
		employeeNo=#{employeeNo}
	</update>
	<sql id="T001">
		T001.employeeNo,
		T001.employeeFristName,
		T001.employeeLastName,
		T001.password,
		T001.authorityCode,
		T001.updateTime,
		T001.createTime,
		T001.updateUser,
	</sql>
	<sql id="T002">
		T002.employeeNo,
		T002.genderStatus,
		T002.birthday,
		T002.japaneseCalendar,
		T002.alphabetName,
		SUBSTRING_INDEX(T002.alphabetName, ' ',1) alphabetName1,
		SUBSTRING_INDEX(T002.alphabetName, ' ',-1) alphabetName2,
		T002.furigana,
		SUBSTRING_INDEX(T002.furigana, ' ',1) furigana1,
		SUBSTRING_INDEX(T002.furigana, ' ',-1) furigana2,
		T002.nationalityCode,
		T002.birthplace,
		T002.intoCompanyCode,
		T002.intoCompanyYearAndMonth,
		T002.employeeStatus,
		T002.retirementYearAndMonth,
		T002.retirementResonClassification,
		T002.myNumber,
		T002.occupationCode,
		T002.employeeFormCode,
		T002.comeToJapanYearAndMonth,
		T002.graduationUniversity,
		T002.graduationYearAndMonth,
		T002.major,
		T002.residenceCode,
		T002.residenceCardNo,
		T002.stayPeriod,
		T002.japaneseLevelCode,
		T002.englishLevelCode,
		T002.developLanguage1,
		T002.developLanguage2,
		T002.developLanguage3,
		T002.developLanguage4,
		T002.developLanguage5,
		T002.frameWork1,
		T002.frameWork2,
		T002.certification1,
		T002.certification2,
		T002.residentCardInfo,
		T002.passportInfo,
		T002.companyMail,
		T002.phoneNo,
		T002.passportStayPeriod,
		T002.passportNo,
		T002.immigrationStartTime,
		T002.immigrationEndTime,
		T002.employmentInsuranceStatus,
		T002.employmentInsuranceNo,
		T002.socialInsuranceStatus,
		T002.socialInsuranceNo,
		T002.socialInsuranceDate,
		T002.departmentCode,
		T002.siteRoleCode,
		T002.projectTypeCode,
		T002.updateTime,
		T002.createTime,
		T002.updateUser,
		T002.picInfo,
		T002.yearsOfExperience,
		T002.contractDeadline,
	</sql>
	<sql id="T003">
		T003.employeeNo,
		T003.postcode,
		T003.firstHalfAddress,
		T003.lastHalfAddress,
		T003.stationCode,
		T003.createTime,
		T003.updateUser,
	</sql>
	<sql id="T015">
		T015.resumeInfo1,
		T015.resumeName1,
		T015.resumeInfo2,
		T015.resumeName2
	</sql>
	<sql id="tableJoin">
		FROM
		T001Employee AS T001
		LEFT JOIN
		T002EmployeeDetail AS T002
		ON
		T002.employeeNo =
		T001.employeeNo
		LEFT JOIN
		T015ResumeManagement AS
		T015
		ON
		T015.employeeNo=T001.employeeNo
		LEFT JOIN
		T006EmployeeSiteInfo AS
		T006
		ON T001.employeeNo
		= T006.employeeNo
		AND admissionStartDate =
		(SELECT
		MAX(admissionStartDate)
		FROM
		T006EmployeeSiteInfo)
		LEFT
		JOIN
		T003AddressInfo AS T003
		ON
		T001.employeeNo
		=
		T003.employeeNo
		LEFT
		JOIN
		M013Station AS M013 ON
		T003.stationCode =
		M013.stationCode
		LEFT
		JOIN
		T005WagesInfo AS T005 ON
		T001.employeeNo
		=T005.employeeNo
		and
		reflectYearAndMonth = (SELECT
		MAX(reflectYearAndMonth) FROM
		T005WagesInfo)
		LEFT JOIN
		T007CustomerInfo
		AS T007 ON
		T006.customerNo =
		T007.customerNo,
		(SELECT
		@rowNo:=0) AS rowNo
	</sql>
	<!-- 住所情報を追加 -->
	<insert id="insertAddressInfo" parameterType="String">
		INSERT INTO
		T003AddressInfo (
		employeeNo,
		postcode,
		firstHalfAddress,
		lastHalfAddress,
		stationCode,
		updateTime,
		createTime,
		updateUser
		)
		VALUES(
		#{employeeNo},
		#{postcode},
		#{firstHalfAddress},
		#{lastHalfAddress},
		#{stationCode},
		NOW(),
		NOW(),
		#{updateUser}
		)
	</insert>
	<!-- ログイン -->
	<select id="getEmployeeModel" parameterType="map"
		resultMap="Employee">
		SELECT
		T001.employeeNo,
		T001.employeeFristName,
		T001.employeeLastName,
		T001.authorityCode,
		M009.authorityName
		FROM
		T001Employee T001
		LEFT JOIN M009Authority M009 ON T001.authorityCode =
		M009.authorityCode
		LEFT JOIN T002EmployeeDetail T002 ON T001.employeeNo
		= T002.employeeNo
		WHERE
		T001. PASSWORD = MD5(#{password})
		AND
		T001.employeeNo = #{employeeNo}
	</select>
	<!-- ログイン社員番号の電話番号を取得 -->
	<select id="getEmployeePhoneNo" parameterType="String"
		resultMap="stringResult">
		SELECT
		phoneNo
		FROM
		T002EmployeeDetail
		WHERE
		employeeNo =
		#{employeeNo}
	</select>

	<!--履歴書を追加 -->
	<insert id="insertResumeManagement" parameterType="String">
		INSERT INTO
		T015ResumeManagement (
		employeeNo,
		resumeInfo1,
		resumeName1,
		resumeInfo2,
		resumeName2,
		updateTime,
		createTime,
		updateUser
		)
		VALUES(
		#{employeeNo},
		#{resumeInfo1},
		#{resumeName1},
		#{resumeInfo2},
		#{resumeName2},
		NOW(),
		NOW(),
		#{updateUser}
		)
	</insert>
	<!-- 履歴書を修正 -->
	<update id="updateResumeManagement" parameterType="String">
		UPDATE
		T015ResumeManagement
		SET
		<if test="employeeNo!=  null">
			employeeNo =#{employeeNo},
		</if>
		<if test="resumeInfo1!=   null">
			resumeInfo1 =#{resumeInfo1},
		</if>
		<if test="resumeName1!=  null">
			resumeName1 =#{resumeName1},
		</if>
		<if test="resumeName1 ==  null || resumeName1 ==  ''">
			resumeInfo1 = null,
		</if>
		<if test="resumeInfo2!=  null">
			resumeInfo2=#{resumeInfo2},
		</if>
		<if test="resumeName2!= null">
			resumeName2 =#{resumeName2},
		</if>
		<if test="resumeName2 ==  null || resumeName2 ==  ''">
			resumeInfo2 = null,
		</if>
		updateTime = NOW(),
		updateUser =
		#{updateUser}
		WHERE
		employeeNo =
		#{employeeNo}
	</update>

	<!-- BP情報更新 -->
	<update id="updatebpInfo"
		parameterType="jp.co.lyc.cms.model.BpInfoModel">
		UPDATE
		T011BpInfoSupplement
		SET
		bpUnitPrice =
		#{bpUnitPrice},
		bpBelongCustomerCode = #{bpBelongCustomerCode},
		bpSalesProgressCode = #{bpSalesProgressCode},
		bpOtherCompanyAdmissionEndDate = #{bpOtherCompanyAdmissionEndDate},
		bpRemark = #{bpRemark}
		WHERE
		bpEmployeeNo = #{bpEmployeeNo}
	</update>

	<!-- 履歴書を削除 -->
	<delete id="deleteResumeManagement" parameterType="String">
		DELETE
		FROM
		T015ResumeManagement
		WHERE
		employeeNo = #{employeeNo};
	</delete>

	<!-- 現場あり社員番号を取得 -->
	<select id="getEmployeeWithAdmission" parameterType="map"
		resultMap="stringResult">
		SELECT employeeNo FROM T006EmployeeSiteInfo
		where
		admissionStartDate!="" and admissionStartDate is not null
		and
		admissionEndDate is null
		and if(typteOfContractCode is
		null,1=1,typteOfContractCode != "4")
		or admissionStartDate != "" and
		admissionStartDate is not null
		and admissionEndDate &gt; #{nowDate}
		and
		if(typteOfContractCode is null,1=1,typteOfContractCode != "4")
		GROUP BY
		employeeNo;
	</select>

	<select id="getEmployeesDevelopLanguage" parameterType="map"
		resultMap="Employee">
		SELECT
		employeeNo,developLanguage1,developLanguage2,developLanguage3,developLanguage4,developLanguage5
		FROM T002EmployeeDetail;
	</select>

	<select id="getcustomerNo" parameterType="map"
		resultMap="Employee">
		<!-- SELECT T006EmployeeSiteInfo.employeeNo,T006EmployeeSiteInfo.customerNo 
			FROM T006EmployeeSiteInfo left Join T002EmployeeDetail on T006EmployeeSiteInfo.employeeNo=T002EmployeeDetail.employeeNo; -->
		SELECT
		T006EmployeeSiteInfo.employeeNo,customerNo
		FROM
		T006EmployeeSiteInfo
		INNER JOIN (SELECT
		employeeNo,
		MAX(admissionStartDate) AS admissionStartDate
		FROM
		T006EmployeeSiteInfo
		GROUP BY
		employeeNo) AS TempTable
		ON
		T006EmployeeSiteInfo.employeeNo =
		TempTable.employeeNo
		AND
		T006EmployeeSiteInfo.admissionStartDate =
		TempTable.admissionStartDate;
	</select>

	<select id="getBpfrom" parameterType="map" resultMap="Employee">
		<!-- SELECT T006EmployeeSiteInfo.employeeNo,T006EmployeeSiteInfo.customerNo 
			FROM T006EmployeeSiteInfo left Join T002EmployeeDetail on T006EmployeeSiteInfo.employeeNo=T002EmployeeDetail.employeeNo; -->
		SELECT T002.employeeNo,if(T007.customerAbbreviation is null or
		trim(T007.customerAbbreviation) =
		"",T007.customerName,T007.customerAbbreviation) as bpfrom
		FROM
		T002EmployeeDetail as T002
		Left Join T011BpInfoSupplement as T011
		on
		T002.employeeNo = T011.bpEmployeeNo
		Left Join T007CustomerInfo as T007
		on T011.bpBelongCustomerCode = T007.customerNo
		where
		if(T007.customerAbbreviation is null or
		trim(T007.customerAbbreviation) =
		"",T007.customerName,T007.customerAbbreviation) is not null
		;
	</select>

	<select id="getAdmissionStartDate" parameterType="map"
		resultMap="Employee">
		<!-- SELECT T006EmployeeSiteInfo.employeeNo,left(T006EmployeeSiteInfo.admissionStartDate,6) 
			as admissionTime FROM T006EmployeeSiteInfo where admissionStartDate is not 
			null and admissionEndDate is null; -->
		SELECT
		T006EmployeeSiteInfo.employeeNo,left(T006EmployeeSiteInfo.admissionStartDate,6)
		as admissionTime FROM T006EmployeeSiteInfo
		where typteOfContractCode is
		null or typteOfContractCode != "4"
		GROUP BY
		T006EmployeeSiteInfo.employeeNo;
	</select>
</mapper>