<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="jp.co.lyc.cms.mapper.EmployeeInfoMapper">
	<resultMap id="Employee"
		type="jp.co.lyc.cms.model.EmployeeModel" />
	<resultMap id="stringResult" type="String" />
	<select id="getEmployeeInfo" parameterType="map"
		resultMap="Employee">
		SELECT
		(@rowNo:=@rowNo + 1) AS rowNo,
		T001.employeeNo,
		CONCAT(T001.employeeFristName,' ',T001.employeeLastName) as
		employeeFristName ,
		T002.Furigana,
		T002.alphabetName,
		T002.birthday,
		T002.intoCompanyYearAndMonth,
		T006.AdmissionStartDate,
		T005.salary,
		T007.customerName,
		T002.phoneNo,
		T003.postcode,
		T003.firstHalfAddress,
		T003.lastHalfAddress,
		M013.stationName,
		T002.stayPeriod,
		T002.residentCardInfo,
		T002.passportInfo,
		T015.resumeInfo1,
		T015.resumeName1,
		T015.resumeInfo2,
		T015.resumeName2
		FROM
		T001Employee AS
		T001
		LEFT JOIN
		T002EmployeeDetail AS T002 ON T002.employeeNo
		=T001.employeeNo
		LEFT
		JOIN T015ResumeManagement AS T015 ON
		T015.employeeNo=T001.employeeNo
		LEFT JOIN T006EmployeeSiteInfo AS T006
		ON T001.employeeNo =
		T006.employeeNo
		AND admissionStartDate in
		(
		<if test="kadou!=null">
			<if test='kadou=="0"'>
				SELECT MAX(admissionStartDate) FROM T006EmployeeSiteInfo
				where 1=1 GROUP BY employeeNo
			</if>
			<if test='kadou=="1"'>
				SELECT MAX(admissionEndDate) FROM T006EmployeeSiteInfo
				where 1=1 GROUP BY employeeNo
			</if>
		</if>
		<if test="kadou==null">
			SELECT MAX(admissionStartDate) FROM T006EmployeeSiteInfo
			where 1=1
		</if>
		)
		LEFT JOIN T003AddressInfo AS T003 ON T001.employeeNo=T003.employeeNo
		LEFT JOIN M013Station AS M013 ON T003.stationCode=M013.stationCode
		LEFT JOIN T005WagesInfo AS T005 ON T001.employeeNo=T005.employeeNo
		and
		reflectYearAndMonth = (SELECT MAX(reflectYearAndMonth) FROM
		T005WagesInfo)
		LEFT JOIN T007CustomerInfo AS T007 ON T006.customerNo
		=T007.customerNo,
		(SELECT @rowNo:=0) AS rowNo WHERE 1 = 1
		<if test="employeeNo!=null">
			AND T001.employeeNo=#{employeeNo}
		</if>
		<if test="employeeName!=null">
			AND CONCAT(T001.employeeFristName,T001.employeeLastName)
			like
			concat('%',#{employeeName},'%')
		</if>
		<if test="employeeFormCode!=null">
			AND T002.employeeFormCode=#{employeeFormCode}
		</if>
		<if test="employeeFormCode==null">
			AND T002.employeeFormCode !='3'
		</if>
		<if test="employeeStatus!=null">
			AND T002.employeeStatus=#{employeeStatus}
		</if>
		<if test="genderStatus!=null">
			AND T002.genderStatus=#{genderStatus}
		</if>
		<if test="ageFrom != null">
			AND T002.birthday &lt;= #{ageFrom}+9999
		</if>
		<if test="ageTo != null">
			AND T002.birthday &gt;= #{ageTo}
		</if>
		<if test="residenceCode != null">
			AND T002.residenceCode=#{residenceCode}
		</if>
		<if test="nationalityCode != null">
			AND T002.nationalityCode=#{nationalityCode}
		</if>
		<if test="siteRoleCode != null">
			AND T002.siteRoleCode=#{siteRoleCode}
		</if>

		<if test="customer!= null">
			AND T007.customerNo=#{customer}
		</if>
		<if test="intoCompanyCode!= null">
			AND T002.intoCompanyCode=#{intoCompanyCode}
		</if>
		<if test="japaneseLevelCode!=  null">
			AND T002.japaneseLevelCode=#{japaneseLevelCode}
		</if>
		<if test="developLanguage1 != null">
			AND (T002.developLanguage1=#{developLanguage1}
			or
			T002.developLanguage2=#{developLanguage1}
			or
			T002.developLanguage3=#{developLanguage1}
			or
			T002.developLanguage4=#{developLanguage1}
			or
			T002.developLanguage5=#{developLanguage1}
			)
		</if>
		<if test="developLanguage2 != null">
			AND (T002.developLanguage1=#{developLanguage2}
			or
			T002.developLanguage2=#{developLanguage2}
			or
			T002.developLanguage3=#{developLanguage2}
			or
			T002.developLanguage4=#{developLanguage2}
			or
			T002.developLanguage5=#{developLanguage2}
			)
		</if>
		<if test="developLanguage3!= null">
			AND T002.developLanguage3=#{developLanguage3}
		</if>
		<if test="intoCompanyYearAndMonthFrom != null">
			AND T002.intoCompanyYearAndMonth
			&gt;=#{intoCompanyYearAndMonthFrom}
		</if>
		<if test="intoCompanyYearAndMonthTo!= null">
			AND T002.intoCompanyYearAndMonth
			&lt;=#{intoCompanyYearAndMonthTo}
		</if>
		<if test="kadou!=null">
			<if test='kadou=="0"'>
				AND ( AdmissionStartDate is not null
				AND AdmissionEndDate
				is null
				AND AdmissionStartDate
				&lt;date_format(now(),'%Y%m%d'))
				or
				(AdmissionEndDate
				&lt;date_format(now(),'%Y%m%d'))
			</if>
			<if test='kadou=="1"'>
				AND
				AdmissionEndDate is not null and (AdmissionEndDate
				&lt;date_format(now(),'%Y%m%d'))
			</if>
		</if>
		ORDER BY
		rowNo
		ASC

	</select>

	<select id="getEmployeesInfo" parameterType="map"
		resultMap="Employee">
		SELECT
		T001.employeeNo,
		CONCAT(T001.employeeFristName,'
		',T001.employeeLastName) as
		employeeFristName,
		T002.employeeStatus,
		T002.Furigana,
		T002.alphabetName,
		T002.birthday,
		T002.intoCompanyYearAndMonth,
		T002.phoneNo,
		T002.stayPeriod,
		T002.residentCardInfo,
		T002.passportInfo,
		T002.genderStatus,
		T002.intoCompanyCode,
		T002.employeeFormCode,
		T002.nationalityCode,
		T002.siteRoleCode,
		T002.developLanguage1,
		T002.developLanguage2,
		T002.residenceCode,
		T002.japaneseLevelCode,
		T003.postcode,
		T003.firstHalfAddress,
		T003.lastHalfAddress,
		T005.salary,
		MAX(T006.AdmissionStartDate) as admissionStartDate,
		MAX(T006.AdmissionEndDate) as admissionEndDate,
		T007.customerName,
		T015.resumeInfo1,
		T015.resumeName1,
		T015.resumeInfo2,
		T015.resumeName2,
		M013.stationName
		FROM T002EmployeeDetail as
		T002
		LEFT
		JOIN T001Employee as
		T001
		ON T002.employeeNo =
		T001.employeeNo
		LEFT JOIN
		T003AddressInfo AS
		T003 ON
		T002.employeeNo=T003.employeeNo
		LEFT JOIN
		M013Station AS M013
		ON
		T003.stationCode=M013.stationCode
		LEFT JOIN
		T005WagesInfo AS
		T005 ON
		T002.employeeNo=T005.employeeNo
		and
		reflectYearAndMonth = (SELECT
		MAX(reflectYearAndMonth) FROM
		T005WagesInfo)
		LEFT JOIN
		T006EmployeeSiteInfo AS T006
		ON T001.employeeNo
		=
		T006.employeeNo
		LEFT
		JOIN T007CustomerInfo AS T007 ON
		T006.customerNo
		=T007.customerNo
		LEFT
		JOIN T015ResumeManagement
		AS T015 ON
		T015.employeeNo=T002.employeeNo
		WHERE
		<if test="kadou!=null">
			<if test='kadou=="0"'>
				admissionStartDate!="" and admissionStartDate is not null
				and admissionEndDate is null
			</if>
			<if test='kadou=="1"'>
				<!-- admissionEndDate is not null and (AdmissionEndDate &lt;date_format(now(),'%Y%m%d')) -->
				1=1
			</if>
		</if>
		<if test="kadou==null">
			1=1
		</if>
		<!-- and T006.customerNo = ifnull(#{customer},T006.customerNo) -->
		and
		CONCAT(T001.employeeFristName,T001.employeeLastName) =
		ifnull(#{employeeName},CONCAT(T001.employeeFristName,T001.employeeLastName))
		and
		intoCompanyYearAndMonth between
		ifnull(#{intoCompanyYearAndMonthFrom},intoCompanyYearAndMonth) and
		ifnull(#{intoCompanyYearAndMonthTo},intoCompanyYearAndMonth)
		and
		birthday between ifnull(#{ageTo},birthday) and
		ifnull(#{ageFrom},birthday)
		and
		genderStatus =
		ifnull(#{genderStatus},genderStatus)
		and
		intoCompanyCode =
		ifnull(#{intoCompanyCode},intoCompanyCode)
		and
		T002.employeeFormCode =
		ifnull(#{employeeFormCode},T002.employeeFormCode)
		and
		nationalityCode =
		ifnull(#{nationalityCode},nationalityCode)
		and
		T002.siteRoleCode =
		ifnull(#{siteRoleCode},T002.siteRoleCode)
		and
		residenceCode =
		ifnull(#{residenceCode},residenceCode)
		and
		japaneseLevelCode =
		ifnull(#{japaneseLevelCode},japaneseLevelCode)
		and
		employeeStatus =
		ifnull(#{employeeStatus},employeeStatus)
		GROUP BY
		employeeNo
		order
		by
		employeeNo;
	</select>

	<!-- 社員情報を確認 -->
	<select id="verificationEmployeeInfo" resultType="string">
		SELECT
		employeeNo FROM T006EmployeeSiteInfo where
		admissionEndDate is null;
	</select>

	<!-- 社員情報を追加 -->
	<insert id="insertEmployeeInfo" parameterType="String">
		INSERT INTO
		T001Employee (
		employeeNo,
		employeeFristName,
		employeeLastName,
		password,
		authorityCode,
		updateTime,
		createTime,
		updateUser
		)
		VALUES(
		#{employeeNo},
		#{employeeFristName},
		#{employeeLastName},
		MD5(#{password}),
		#{authorityCode},
		NOW(),
		NOW(),
		#{updateUser}
		)
	</insert>

	<!-- 社員情報詳細を追加 -->
	<insert id="insertEmployeeInfoDetail" parameterType="String">
		INSERT INTO
		T002EmployeeDetail (
		employeeNo,
		genderStatus,
		birthday,
		japaneseCalendar,
		alphabetName,
		furigana,
		nationalityCode,
		birthplace,
		intoCompanyCode,
		intoCompanyYearAndMonth,
		employeeStatus,
		retirementYearAndMonth,
		myNumber,
		occupationCode,
		employeeFormCode,
		comeToJapanYearAndMonth,
		graduationUniversity,
		graduationYearAndMonth,
		major,
		residenceCode,
		residenceCardNo,
		stayPeriod,
		japaneseLevelCode,
		englishLevelCode,
		developLanguage1,
		developLanguage2,
		developLanguage3,
		developLanguage4,
		developLanguage5,
		certification1,
		certification2,
		residentCardInfo,
		passportInfo,
		companyMail,
		phoneNo,
		employmentInsuranceNo,
		departmentCode,
		contractDeadline,
		updateTime,
		createTime,
		updateUser,
		picInfo,
		yearsOfExperience,
		siteRoleCode
		)
		VALUES(
		#{employeeNo},
		#{genderStatus},
		#{birthday},
		#{japaneseCalendar},
		#{alphabetName},
		#{furigana},
		#{nationalityCode},
		#{birthplace},
		#{intoCompanyCode},
		#{intoCompanyYearAndMonth},
		#{employeeStatus},
		#{retirementYearAndMonth},
		#{myNumber},
		#{occupationCode},
		#{employeeFormCode},
		#{comeToJapanYearAndMonth},
		#{graduationUniversity},
		#{graduationYearAndMonth},
		#{major},
		#{residenceCode},
		#{residenceCardNo},
		#{stayPeriod},
		#{japaneseLevelCode},
		#{englishLevelCode},
		#{developLanguage1},
		#{developLanguage2},
		#{developLanguage3},
		#{developLanguage4},
		#{developLanguage5},
		#{certification1},
		#{certification2},
		#{residentCardInfo},
		#{passportInfo},
		#{companyMail},
		#{phoneNo},
		#{employmentInsuranceNo},
		#{departmentCode},
		#{contractDeadline},
		NOW(),
		NOW(),
		#{updateUser},
		#{picInfo},
		#{yearsOfExperience},
		#{siteRoleCode}
		)
	</insert>

	<!-- 社員情報を削除 -->
	<delete id="deleteEmployeeInfo" parameterType="String">
		DELETE
		FROM
		T001Employee
		WHERE
		employeeNo = #{employeeNo};
	</delete>
	<!-- 社員情報詳細を削除 -->
	<delete id="deleteEmployeeInfoDetail" parameterType="String">
		DELETE
		FROM
		T002EmployeeDetail
		WHERE
		employeeNo = #{employeeNo};
	</delete>

	<!-- 住所情報を削除 -->
	<delete id="deleteAddressInfo" parameterType="String">
		DELETE
		FROM
		T003AddressInfo
		WHERE
		employeeNo = #{employeeNo};
	</delete>

	<!-- -->
	<select id="getEmployeeByEmployeeNo" parameterType="map"
		resultMap="Employee">
		SELECT
		<include refid="T001" />
		<include refid="T002" />
		<include refid="T003" />
		<include refid="T015" />
		<include refid="tableJoin" />
		WHERE
		1 = 1
		AND T001.employeeNo=#{employeeNo}
	</select>
	<!-- 社員情報を修正 -->
	<update id="updateEmployeeInfo" parameterType="String">
		UPDATE
		T001Employee
		SET
		<if test="employeeNo!=  null">
			employeeNo =#{employeeNo},
		</if>
		<if test="employeeFristName!=  null">
			employeeFristName =#{employeeFristName},
		</if>
		<if test="employeeLastName!=  null">
			employeeLastName =#{employeeLastName},
		</if>
		<if test="password !=  ''">
			password=MD5(#{password}),
		</if>
		<if test="employeeFristName!= null">
			authorityCode =#{authorityCode},
		</if>
		updateTime = NOW(),
		updateUser =
		#{updateUser}
		WHERE
		employeeNo =
		#{employeeNo}
	</update>
	<!-- 社員情報詳細を修正 -->
	<update id="updateEmployeeInfoDetail" parameterType="String">
		UPDATE
		T002EmployeeDetail
		SET
		<if test="employeeNo!=  null">
			employeeNo =#{employeeNo},
		</if>
		<if test="genderStatus!=  null">
			genderStatus =#{genderStatus},
		</if>
		<if test="birthday!=  null">
			birthday =#{birthday},
		</if>
		<if test="japaneseCalendar!=  null">
			japaneseCalendar =#{japaneseCalendar},
		</if>

		<if test="alphabetName!=  null">
			alphabetName =#{alphabetName},
		</if>
		<if test="employeeFormCode!=  null">
			employeeFormCode =#{employeeFormCode},
		</if>
		<if test="furigana!=  null">
			furigana =#{furigana},
		</if>
		<if test="nationalityCode!=  null">
			nationalityCode =#{nationalityCode},
		</if>
		<if test="birthplace!=  null">
			birthplace =#{birthplace},
		</if>
		<if test="intoCompanyCode!=  null">
			intoCompanyCode =#{intoCompanyCode},
		</if>
		<if test="intoCompanyYearAndMonth!=  null">
			intoCompanyYearAndMonth =#{intoCompanyYearAndMonth},
		</if>
		<if test="employeeStatus!=  null">
			employeeStatus =#{employeeStatus},
		</if>
		<if test="retirementYearAndMonth!=  null">
			retirementYearAndMonth =#{retirementYearAndMonth},
		</if>
		<if test="myNumber!=  null">
			myNumber =#{myNumber},
		</if>
		<if test="occupationCode!=  null">
			occupationCode =#{occupationCode},
		</if>
		<if test="comeToJapanYearAndMonth!=  null">
			comeToJapanYearAndMonth =#{comeToJapanYearAndMonth},
		</if>
		<if test="graduationUniversity!=  null">
			graduationUniversity =#{graduationUniversity},
		</if>
		<if test="graduationYearAndMonth!=  null">
			graduationYearAndMonth =#{graduationYearAndMonth},
		</if>
		<if test="major!=  null">
			major =#{major},
		</if>
		<if test="residenceCode!=  null">
			residenceCode =#{residenceCode},
		</if>
		<if test="residenceCardNo!=  null">
			residenceCardNo =#{residenceCardNo},
		</if>
		<if test="stayPeriod!=  null">
			stayPeriod =#{stayPeriod},
		</if>
		<if test="japaneseLevelCode!=  null">
			japaneseLevelCode =#{japaneseLevelCode},
		</if>
		<if test="englishLevelCode!=  null">
			englishLevelCode =#{englishLevelCode},
		</if>
		<if test="developLanguage1!=  null">
			developLanguage1 =#{developLanguage1},
		</if>
		<if test="developLanguage2!=  null">
			developLanguage2 =#{developLanguage2},
		</if>
		<if test="developLanguage3!=  null">
			developLanguage3 =#{developLanguage3},
		</if>
		<if test="developLanguage4!=  null">
			developLanguage4 =#{developLanguage4},
		</if>
		<if test="developLanguage5!=  null">
			developLanguage5 =#{developLanguage5},
		</if>
		<if test="japaneseCalendar!=  null">
			japaneseCalendar =#{japaneseCalendar},
		</if>
		<if test="certification1!=  null">
			certification1 =#{certification1},
		</if>
		<if test="certification2!=  null">
			certification2 =#{certification2},
		</if>
		<if test="companyMail!=  null">
			companyMail =#{companyMail},
		</if>
		<if test="phoneNo!=  null">
			phoneNo =#{phoneNo},
		</if>
		<if test="employmentInsuranceNo!=  null">
			employmentInsuranceNo =#{employmentInsuranceNo},
		</if>
		<if test="siteRoleCode!=  null">
			siteRoleCode =#{siteRoleCode},
		</if>
		<if test="residentCardInfo!= null">
			residentCardInfo=#{residentCardInfo},
		</if>
		<if test="passportInfo!= null">
			passportInfo=#{passportInfo},
		</if>
		<if test="picInfo!= null">
			picInfo=#{picInfo},
		</if>
		<if test="yearsOfExperience!= null">
			yearsOfExperience=#{yearsOfExperience},
		</if>
		<if test="departmentCode!= null">
			departmentCode=#{departmentCode},
		</if>
		<if test="picInfo!= null">
			picInfo=#{picInfo},
		</if>
		<if test="contractDeadline!= null">
			contractDeadline=#{contractDeadline},
		</if>
		updateTime=NOW(),
		updateUser=
		#{updateUser}
		WHERE
		employeeNo=
		#{employeeNo}
	</update>
	<!-- アドレスを修正 -->
	<update id="updateAddressInfo" parameterType="String">
		UPDATE
		T003AddressInfo
		SET
		postcode=#{postcode},
		firstHalfAddress=#{firstHalfAddress},
		lastHalfAddress=#{lastHalfAddress},
		stationCode=#{stationCode},
		updateTime=NOW(),
		updateUser=#{updateUser}
		WHERE
		employeeNo=#{employeeNo}
	</update>
	<sql id="T001">
		T001.employeeNo,
		T001.employeeFristName,
		T001.employeeLastName,
		T001.password,
		T001.authorityCode,
		T001.updateTime,
		T001.createTime,
		T001.updateUser,
	</sql>
	<sql id="T002">
		T002.employeeNo,
		T002.genderStatus,
		T002.birthday,
		T002.japaneseCalendar,
		T002.alphabetName,
		SUBSTRING_INDEX(T002.alphabetName, ' ',1) alphabetName1,
		SUBSTRING_INDEX(T002.alphabetName, ' ',-1) alphabetName2,
		T002.furigana,
		SUBSTRING_INDEX(T002.furigana, ' ',1) furigana1,
		SUBSTRING_INDEX(T002.furigana, ' ',-1) furigana2,
		T002.nationalityCode,
		T002.birthplace,
		T002.intoCompanyCode,
		T002.intoCompanyYearAndMonth,
		T002.employeeStatus,
		T002.retirementYearAndMonth,
		T002.myNumber,
		T002.occupationCode,
		T002.employeeFormCode,
		T002.comeToJapanYearAndMonth,
		T002.graduationUniversity,
		T002.graduationYearAndMonth,
		T002.major,
		T002.residenceCode,
		T002.residenceCardNo,
		T002.stayPeriod,
		T002.japaneseLevelCode,
		T002.englishLevelCode,
		T002.developLanguage1,
		T002.developLanguage2,
		T002.developLanguage3,
		T002.developLanguage4,
		T002.developLanguage5,
		T002.certification1,
		T002.certification2,
		T002.residentCardInfo,
		T002.passportInfo,
		T002.companyMail,
		T002.phoneNo,
		T002.employmentInsuranceNo,
		T002.departmentCode,
		T002.siteRoleCode,
		T002.updateTime,
		T002.createTime,
		T002.updateUser,
		T002.picInfo,
		T002.yearsOfExperience,
		T002.contractDeadline,
	</sql>
	<sql id="T003">
		T003.employeeNo,
		T003.postcode,
		T003.firstHalfAddress,
		T003.lastHalfAddress,
		T003.stationCode,
		T003.createTime,
		T003.updateUser,
	</sql>
	<sql id="T015">
		T015.resumeInfo1,
		T015.resumeName1,
		T015.resumeInfo2,
		T015.resumeName2
	</sql>
	<sql id="tableJoin">
		FROM
		T001Employee AS T001
		LEFT JOIN
		T002EmployeeDetail AS T002
		ON
		T002.employeeNo =
		T001.employeeNo
		LEFT JOIN
		T015ResumeManagement AS
		T015
		ON
		T015.employeeNo=T001.employeeNo
		LEFT JOIN
		T006EmployeeSiteInfo AS
		T006
		ON T001.employeeNo
		= T006.employeeNo
		AND admissionStartDate =
		(SELECT
		MAX(admissionStartDate)
		FROM
		T006EmployeeSiteInfo)
		LEFT
		JOIN
		T003AddressInfo AS T003
		ON
		T001.employeeNo
		=
		T003.employeeNo
		LEFT
		JOIN
		M013Station AS M013 ON
		T003.stationCode =
		M013.stationCode
		LEFT
		JOIN
		T005WagesInfo AS T005 ON
		T001.employeeNo
		=T005.employeeNo
		and
		reflectYearAndMonth = (SELECT
		MAX(reflectYearAndMonth) FROM
		T005WagesInfo)
		LEFT JOIN
		T007CustomerInfo
		AS T007 ON
		T006.customerNo =
		T007.customerNo,
		(SELECT
		@rowNo:=0) AS rowNo
	</sql>
	<!-- 住所情報を追加 -->
	<insert id="insertAddressInfo" parameterType="String">
		INSERT INTO
		T003AddressInfo (
		employeeNo,
		postcode,
		firstHalfAddress,
		lastHalfAddress,
		stationCode,
		updateTime,
		createTime,
		updateUser
		)
		VALUES(
		#{employeeNo},
		#{postcode},
		#{firstHalfAddress},
		#{lastHalfAddress},
		#{stationCode},
		NOW(),
		NOW(),
		#{updateUser}
		)
	</insert>
	<!-- ログイン -->
	<select id="getEmployeeModel" parameterType="map"
		resultMap="Employee">
		SELECT
		T001.employeeNo,
		T001.employeeFristName,
		T001.employeeLastName,
		T001.authorityCode,
		M009.authorityName
		FROM
		T001Employee T001
		LEFT JOIN M009Authority M009 ON T001.authorityCode =
		M009.authorityCode
		LEFT JOIN T002EmployeeDetail T002 ON T001.employeeNo
		= T002.employeeNo
		WHERE
		T001. PASSWORD = MD5(#{password})
		AND
		T001.employeeNo = #{employeeNo}
	</select>
	<!-- ログイン社員番号の電話番号を取得 -->
	<select id="getEmployeePhoneNo" parameterType="String"
		resultMap="stringResult">
		SELECT
		phoneNo
		FROM
		T002EmployeeDetail
		WHERE
		employeeNo =
		#{employeeNo}
	</select>

	<!--履歴書を追加 -->
	<insert id="insertResumeManagement" parameterType="String">
		INSERT INTO
		T015ResumeManagement (
		employeeNo,
		resumeInfo1,
		resumeName1,
		resumeInfo2,
		resumeName2,
		updateTime,
		createTime,
		updateUser
		)
		VALUES(
		#{employeeNo},
		#{resumeInfo1},
		#{resumeName1},
		#{resumeInfo2},
		#{resumeName2},
		NOW(),
		NOW(),
		#{updateUser}
		)
	</insert>
	<!-- 履歴書を修正 -->
	<update id="updateResumeManagement" parameterType="String">
		UPDATE
		T015ResumeManagement
		SET
		<if test="employeeNo!=  null">
			employeeNo =#{employeeNo},
		</if>
		<if test="resumeInfo1!=   null">
			resumeInfo1 =#{resumeInfo1},
		</if>
		<if test="resumeName1!=  null">
			resumeName1 =#{resumeName1},
		</if>
		<if test="resumeInfo2!=  null">
			resumeInfo2=#{resumeInfo2},
		</if>
		<if test="resumeName2!= null">
			resumeName2 =#{resumeName2},
		</if>
		updateTime = NOW(),
		updateUser =
		#{updateUser}
		WHERE
		employeeNo =
		#{employeeNo}
	</update>
	<!-- 履歴書を削除 -->
	<delete id="deleteResumeManagement" parameterType="String">
		DELETE
		FROM
		T015ResumeManagement
		WHERE
		employeeNo = #{employeeNo};
	</delete>

	<!-- 現場あり社員番号を取得 -->
	<select id="getEmployeeWithAdmission" parameterType="String"
		resultMap="stringResult">
		SELECT employeeNo FROM T006EmployeeSiteInfo
		where
		admissionStartDate!="" and admissionStartDate is not null
		and
		admissionEndDate is null
		GROUP BY
		employeeNo;
	</select>

	<select id="getEmployeesDevelopLanguage" parameterType="map"
		resultMap="Employee">
		SELECT
		employeeNo,developLanguage1,developLanguage2,developLanguage3,developLanguage4,developLanguage5
		FROM T002EmployeeDetail;
	</select>

	<select id="getcustomerNo" parameterType="map"
		resultMap="Employee">
		SELECT
		T006EmployeeSiteInfo.employeeNo,T006EmployeeSiteInfo.customerNo
		FROM
		T006EmployeeSiteInfo
		left Join T002EmployeeDetail
		on
		T006EmployeeSiteInfo.employeeNo=T002EmployeeDetail.employeeNo;
	</select>

	<select id="getAdmissionStartDate" parameterType="map"
		resultMap="Employee">
		SELECT
		T006EmployeeSiteInfo.employeeNo,left(T006EmployeeSiteInfo.admissionStartDate,6)
		as admissionTime
		FROM T006EmployeeSiteInfo
		where admissionStartDate is not null
		and
		admissionEndDate is null;
	</select>
</mapper>